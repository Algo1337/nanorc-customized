## Here is an example for C/C++.
##
syntax "V" "\.v$"
magic "v"
comment "//"
color brightred "\<[A-Z_][0-9A-Z_]+\>"
color brightred "\<(i64|f84|int|string)\>"
color green "mut" "const" "pub"
color brightmagenta "fn" "struct" "enum" "type" "int" "i64" "float" "\<((i)?nt|i64)\>"
color yellow "import" "module"
color brightcyan "for" "if" "while" "else" "case" "match" "default"
color green "\<((const|dynamic|reinterpret|static)_cast)\>"
color green "\<(lock|assert)\>"
color blue "\<(continue|break|return)\>"
color brightmagenta "'([^'\]|(\\["'abfnrtv\\]))'" "'\\(([0-3]?[0-7]{1,2}))'" "'\\x[0-9A-Fa-f]{1,2}'"

##
## GCC builtins
color green "__attribute__[[:space:]]*\(\([^)]*\)\)" "__(aligned|asm|builtin|hidden|inline|packed|restrict|section|typeof|weak)__"

#Operator Color
color yellow "[.:;,+*|=!\%]" "@" "<" ">" "/" "-" "&" "or"

#Parenthetical Color
color magenta "[(){}]" "\[" "\]"


##
## String highlighting.  You will in general want your comments and
## strings to come last, because syntax highlighting rules will be
## applied in the order they are read in.
color cyan "<[^= 	]*>" ""(\\.|[^"])*""
##
## This string is VERY resource intensive!
#color cyan start=""(\\.|[^"])*\\[[:space:]]*$" end="^(\\.|[^"])*""

## printf-family format specifiers
color yellow "%(\#|(0-+))?(hh|h|l|ll|q|L|j|z|Z|t)?[A-Za-z]" "%%"

## Comment highlighting
color brightblue "//.*"
color brightblue start="/\*" end="\*/"

# Highlighting for documentation comments
color magenta "@param [a-zA-Z_][a-z0-9A-Z_]+"
color magenta "@return"
color magenta "@author.*"

## Trailing whitespace
color ,green "[[:space:]]+$"
